#!/bin/bash
# 简单化项目日常提交，将git add . ; git commit -m "..." ; git push origin master 一步完成
function usage {
    echo "用法：${0##*/} [-m --message | -v --verbose | -h --help]"
}

message="日常更新:smile:"				# 用于commit的字符串
verbose=false					# 是否使用git diff命令查看更改情况（不使用默认的git status）

# 处理参数，如果指定commit字符串
while [[ -n $1 ]]; do
	case $1 in
		-m|--message) shift
					  message="$1"
					  ;;
		-v|--verbose) verbose=true
					  ;;
		-h|--help) usage
				   exit
				   ;;
		*) usage >&2
		   exit 1
		   ;;
	esac
	shift
done

# 判断当前文件夹是否为git项目中文件夹
function in_repo_dir {
    if [[ -d '.git' ]]; then
        # echo "if $PWD"
        return 0
    elif [[ $PWD == '/' ]]; then
        # echo "else $PWD"
        return 1
    else
        # echo "向上一级搜索...$PWD"
        cd ..
        in_repo_dir
    fi
}

# if in_repo_dir; then
#     echo "yes"
# else
#     echo "no"
# fi

if in_repo_dir; then 		# 如果是git项目根目录
    # 显示更新内容
    echo $(claudio_color --color green "需更新的内容有：")
    # echo "\$verbose = $verbose" # TEST
    if $verbose ; then
        git diff
    else
        git status
    fi

    # 确认更新的交互
    echo -n $(claudio_color --color green "是否推使用'$message'推送到github上？(yes/no)： ")
    read

    case $REPLY in
        y|Y|yes) echo $(claudio_color --color green "添加所有更改...")
		         git add .
		         echo $(claudio_color --color green "使用git commit '$message' Commit...")
		         git commit -m "$message"
		         echo $(claudio_color --color green "远程推送...")
		         if $(git push origin master); then
			         echo $(claudio_color --color green "远程更新结束，再见！")
		         fi
		         ;;
        *) echo $(claudio_color --color green  "再见，不更新算逑！")
           exit
           ;;
    esac
else
	echo $(claudio_color --color yellow "不在git项目目录下！") >&2
	exit 1
fi
