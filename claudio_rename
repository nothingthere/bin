#!/bin/bash
# 将使用Firfox插件dwhelper插件下载来的音乐文件，批量重命名

DIR=~/dwhelper                  # 原来文件位置
dest_dir=                       # 新位置

function usage {
    echo "用法：${0##*/} -a|--artist 艺术家名称" >&2
    exit 1
}

# 根据参数确定文件夹名称
if [[ -n $1 && -n $2 ]]; then
    if [[ $1 == '-a' || $1 == '--artist' ]]; then
        dest_dir="$HOME/Music/$2"
        mkdir -p $dest_dir
    else
        usage
    fi
else
    usage
fi

for file in $(find $DIR -regextype "posix-egrep" -regex ".*(mp4|mp3|ogg|avi|mkv)" | tr ' ' '@'); do # 为了循环先把空格替代
    # 再将原来的空格弄回来，获得原始文件名
	orgin_name=$(echo $file | sed 's/@/ /g')

	# echo "$orgin_name"						 # TEST

    # 删除从163音乐下载来的三角形
    newname=$(echo $file | sed 's/▶//')

    # 豆瓣音乐中的多余字符
    # 去除。。。
    newname=$(echo $newname | sed 's/正在播放//g')

    # 去除艺术家名称
	# newname=$(echo $newname | sed 's/-久石让//g')

    # 去除括号
	newname=$(echo $newname | sed -E 's/-\(\)//')

    # 删除所有新生成空格
    newname=$(echo $newname | tr --delete ' ')
    # 如果文件名前有@则删除
    newname=$(echo $newname | sed 's/\(.*\)\/@\(.*\)/\1\/\2/')

    # 将原来空格的部分替换为横线
    newname=$(echo $newname | sed 's/@/-/g')

	# echo $newname               # TEST
	# echo $orgin_name			# TEST

	# 移动到新文件夹
	if [[ -n $newname ]]; then
		echo $(claudio_color --color green "移动") "$orgin_name" $(claudio_color --color green "到") "$dest_dir/${newname##*/}"
		mv --interactive "$orgin_name" "$dest_dir/${newname##*/}"
	fi
done
